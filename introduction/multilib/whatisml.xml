<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="whatisml" xreflabel="Hva er Multilib?">
  <?dbhtml filename="whatisml.html"?>

  <title>Hva er Multilib?</title>

  <para>
    Multilib er i hovedsak muligheten til i det minste å kjøre programvare 
    som ble bygget for en annen arkitektur enn din egen. 
    For eksempel, og det vanligste: brukeren har en x86_64 CPU som 
    ønsker å kjøre programvare bygget for å kjøre på en x86 CPU. For å bedre 
    etablere begreper, er x86_64 64-bit og amd64, mens x86 er 
    32-bit og ix86 hvor <option>x</option> kan variere fra 3 til 6.
  </para>

  <sect2>
    <title>Hvordan fungerer det?</title>  

    <para>
      Multilib kan oppnås først ved å ha maskinvaren 
      i stand til x86-emulering, deretter ha biblioteker bygget for x86. 
      Vi vil komme inn på hvordan man kompilerer x86-biblioteker og programvare og 
      hvordan de kjøres senere, men den generelle prosessen for LFS 
      og BLFS er å nesten alltid kompilere programvare, og det er det 
      vi skal gjøre.
    </para>

    <note>
      <para>
        Det er verdt å merke seg at når begrepet multilib brukes gjennom 
        denne boken, refererer det til å kjøre i686-instruksjoner på en x86_64 
        vert. Dette dekker ikke kjøring av andre 32-bits arkitekturer på deres 
        64-bits utvidelser, som armhf på arm64
      </para>
    </note>

  </sect2>

</sect1>
