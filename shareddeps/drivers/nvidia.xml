<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY nvidia-download-lib64  "https://us.download.nvidia.com/XFree86/Linux-x86_64/&nvidia-version;/NVIDIA-Linux-x86_64-&nvidia-version;.run">
  <!ENTITY nvidia-download-lib32  "https://us.download.nvidia.com/XFree86/Linux-x86/390.157/NVIDIA-Linux-x86-390.157.run">
  <!ENTITY nvidia-md5sum-lib64    "c289987ebda8e9419a73e7e8e3409244">
  <!ENTITY nvidia-md5sum-lib32    "0975ee17f9c690555dfb2a342a0138b8">
  <!ENTITY nvidia-size-lib64      "293 MB">
  <!ENTITY nvidia-size-lib32      "41 MB">
  <!ENTITY nvidia-buildsize-lib64 "1.1 GB">
  <!ENTITY nvidia-buildsize-lib32 "202 MB">
]>

<sect1 id="nvidia" xreflabel="NVIDIA-&nvidia-version;">
  <?dbhtml filename="nvidia.html"?>

  <title>NVIDIA-&nvidia-version;</title>

  <indexterm zone="nvidia">
    <primary sortas="a-nvidia">NVIDIA</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to NVIDIA</title>

    <para>
      The <application>NVIDIA</application> proprietary driver contains
      firmware, kernel drivers, userland drivers pertaining to OpenGL,
      Vulkan, and hardware acceleration, and provides useful utilites.
    </para>

    &lfs121_checked;

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (x86): <ulink url="&nvidia-download-lib32;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum (x86): &nvidia-md5sum-lib32;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size (x86): &nvidia-size-lib32;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated disk space required (x86): &nvidia-buildsize-lib32;
        </para>
      </listitem>
    </itemizedlist>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (x86_64): <ulink url="&nvidia-download-lib64;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum (x86_64): &nvidia-md5sum-lib64;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size (x86_64): &nvidia-size-lib64;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated disk space required (x86_64): &nvidia-buildsize-lib64;
        </para>
      </listitem>
    </itemizedlist>

    <note>
      <para>
	If you are doing multilib, install the x86_64 driver as it includes
	32-bit libraries along with the 64-bit libraries.
      </para>
    </note>

    <bridgehead renderas="sect3">NVIDIA Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="required">
	Xorg Libraries
    </para>

    <bridgehead renderas="sect4">Recommended</bridgehead>
    <para role="recommended">
	<xref linkend="libglvnd"/>,
	<xref linkend="libvk"/>,
	and Wayland.
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Installation of NVIDIA</title>

    <note>
      <para>
	Make sure to follow the following command when an <application>Xorg
	</application> instance isn't running, or else the driver will
	complain and quit.
      </para>

      <para>
	Along with that, be sure to have the kernel source that you have
	compiled the kernel you are currently using with. Make sure the
	source tree has not been moved, or else you will have to specify
	the kernel source tree directory using <parameter>
	--kernel-source-path=&lt;path&gt;</parameter>. If you don't have
	the source tree on your system, the driver will fail to install.
      </para>
    </note>

    <para>
      Install x86 <application>NVIDIA</application> by running the following
      commands as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>sh NVIDIA-Linux-x86-390.157.run
</userinput></screen>

    <para>
      Or install x86_64 <application>NVIDIA</application> by running the
      following commands as the <systemitem class="username">root</systemitem>
      user:
    </para>

<screen role="root"><userinput>sh NVIDIA-Linux-x86_64-&nvidia-version;.run
</userinput></screen>

    <para>
      And just follow the prompts.
    </para>

    <note>
      <para>
	If you are having trouble installing the driver, it might be because
	it has issues with the Ncurses library. Pass <parameter>--silent
	</parameter> to the above command for your architecture as it may
	solve the issue.
      </para>
    </note>

    <important>
      <para>
	When you update the kernel, you will also need to reinstall the
	<application>NVIDIA</application> driver.
      </para>

      <para>
	This is because there is glue, although thin, when kernel
        modules are built, and when most of the kernel modules are built
        with the current kernel version and get updated when the kernel
        also gets updated, this glue doesn't matter too much with 1st
        party modules (modules in the kernel source tree). However, when
        it comes to 3rd party modules, they aren't updated when the kernel
        updates, or have the newer kernel in mind, so this glue breaks,
        leading to broken kernel modules. This also applies if you stay on
        the same kernel verion but change some options, this can also break
        the glue.
      </para>

      <para>
	Be sure that when you reinstall the driver, make sure you are using
	the new kernel and have the kernel source you built from. Otherwise
	the driver will fail to install.
      </para>
    </important>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Firmware</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
	  nvidia-bug-report.sh,
	  nvidia-cuda-mps-control,
	  nvidia-cuda-mps-server,
	  nvidia-debugdump,
	  nvidia-installer,
	  nvidia-modprobe,
	  nvidia-ngx-updater,
	  nvidia-persistenced,
	  nvidia-powerd,
	  nvidia-settings,
	  nvidia-sleep.sh,
	  nvidia-smi,
	  nvidia-uninstall, and
	  nvidia-xconfig
	</seg>
	<seg>
	  gsp_ga10x.bin and
	  gsp_tu10x.bin (firmware is for the x86_64 driver)
	</seg>
        <seg>
	  nvidia-drm_gbm.so,
	  libEGL_nvidia.so,
	  libGLESv1_CM_nvidia.so,
	  libGLESv2_nvidia.so,
	  libGLX_nvidia.so,
	  libcuda.so,
	  libcudadebugger.so,
	  libglxserver_nvidia.so,
	  libnvcuvid.so,
	  libnvidia-allocator.so,
	  libnvidia-api.so,
	  libnvidia-cfg.so,
	  libnvidia-egl-gbm.so,
	  libnvidia-eglcore.so,
	  libnvidia-encode.so,
	  libnvidia-fbc.so,
	  libnvidia-glcore.so,
	  libnvidia-glsi.so,
	  libnvidia-glvkspirv.so,
	  libnvidia-gpucomp.so,
	  libnvidia-gtk2.so,
	  libnvidia-gtk3.so,
	  libnvidia-ml.so,
	  libnvidia-ngx.so,
	  libnvidia-nvvm.so,
	  libnvidia-opencl.so,
	  libnvidia-opticalflow.so,
	  libnvidia-pkcs11-openssl3.so,
	  libnvidia-pkcs11.so,
	  libnvidia-ptxjitcompiler.so,
	  libnvidia-rtcore.so,
	  libnvidia-tls.so,
	  libnvidia-wayland-client.so,
	  libnvoptix.so,
	  for <xref linkend="wine"/> (_nvngx.dll and nvngx.dll),
	  libvdpau_nvidia.so,
	  nvidia-drm_gbm.so, and
	  nvidia_drv.so
        </seg>
        <seg>
	  /usr/lib/firmware/nvidia,
          /usr/lib/gbm,
	  /usr/lib/modprobe.d,
	  /usr/lib/modules-load.d,
	  /usr/lib/nvidia/wine,
	  /usr/lib/nvidia/xorg,
	  if on Systemd
	  (/usr/lib/systemd/system-sleep and
	  /usr/lib/systemd/system),
	  /usr/lib/sysusers.d,
	  /usr/lib/vdpau,
	  /usr/lib/xorg/modules/drivers,
	  /usr/share/X11/xorg.conf.d,
	  if on Systemd	
	  (/usr/share/dbus-1/system.d),
	  /usr/share/egl/egl_external_platform.d,
	  /usr/share/nvidia,
	  /etc/share/vulkan/icd.d,
	  /etc/share/vulkan/implicit_layer.d, and
	  /usr/src/debug/nvidia-utils
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="nvidia-bug-report.sh">
        <term><command>nvidia-bug-report.sh</command></term>
        <listitem>
          <para>
            is the <application>NVIDIA</application> bug reporting shell script.
          </para>
          <indexterm zone="nvidia nvidia-bug-report.sh">
            <primary sortas="b-nvidia-bug-report.sh">nvidia-bug-report.sh</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-cuda-mps-control">
        <term><command>nvidia-cuda-mps-control</command></term>
        <listitem>
          <para>
            allows multiple CUDA processes to share a single GPU context
          </para>
          <indexterm zone="nvidia nvidia-cuda-mps-control">
            <primary sortas="b-nvidia-cuda-mps-control">nvidia-cuda-mps-control</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-cuda-mps-server">
        <term><command>nvidia-cuda-mps-server</command></term>
        <listitem>
          <para>
            creates the shared GPU context, manages the clients, and issues work
            to the GPU on behalf of the clients
          </para>
          <indexterm zone="nvidia nvidia-cuda-mps-server">
            <primary sortas="b-nvidia-cuda-mps-server">nvidia-cuda-mps-server</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-debugdump">
        <term><command>nvidia-debugdump</command></term>
        <listitem>
          <para>
            collects the internal GPU state
          </para>
          <indexterm zone="nvidia nvidia-debugdump">
            <primary sortas="b-nvidia-debugdump">nvidia-debugdump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-installer">
        <term><command>nvidia-installer</command></term>
        <listitem>
          <para>
            installs, upgrades, and uninstalls the <application>NVIDIA
	    </application> driver (running the runfile directly is
	    recommended)
          </para>
          <indexterm zone="nvidia nvidia-installer">
            <primary sortas="b-nvidia-installer">nvidia-installer</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-modprobe">
        <term><command>nvidia-modprobe</command></term>
        <listitem>
          <para>
            creates Linux device files and loads the <application>NVIDIA
            </application> kernel module
          </para>
          <indexterm zone="nvidia nvidia-modprobe">
            <primary sortas="b-nvidia-modprobe">nvidia-modprobe</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-ngx-updater">
        <term><command>nvidia-ngx-updater</command></term>
        <listitem>
          <para>
            updates NGX features without requiring a full application update
          </para>
          <indexterm zone="nvidia nvidia-ngx-updater">
            <primary sortas="b-nvidia-ngx-updater">nvidia-ngx-updater</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-persistenced">
        <term><command>nvidia-persistenced</command></term>
        <listitem>
          <para>
            maintains the persistent driver state
          </para>
          <indexterm zone="nvidia nvidia-persistenced">
            <primary sortas="b-nvidia-persistenced">nvidia-persistenced</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-powerd">
        <term><command>nvidia-powerd</command></term>
        <listitem>
          <para>
            provides support for the <application>NVIDIA</application>
	    Dynamic Boost feature
          </para>
          <indexterm zone="nvidia nvidia-powerd">
            <primary sortas="b-nvidia-powerd">nvidia-powerd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-settings">
        <term><command>nvidia-settings</command></term>
        <listitem>
          <para>
            a GUI application relying on <ulink url="&blfs-svn;/x/gtk3.html">GTK-3
            </ulink> that allows tweaking settings like resolution and refresh rate
          </para>
          <indexterm zone="nvidia nvidia-settings">
            <primary sortas="b-nvidia-settings">nvidia-settings</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-sleep.sh">
        <term><command>nvidia-sleep.sh</command></term>
        <listitem>
          <para>
            interacts with the <filename>
            /proc/driver/nvidia/suspend</filename> interface
          </para>
          <indexterm zone="nvidia nvidia-sleep.sh">
            <primary sortas="b-nvidia-sleep.sh">nvidia-sleep.sh</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-smi">
        <term><command>nvidia-smi</command></term>
        <listitem>
          <para>
            provides montioring information for Tesla and select Quadro devices
          </para>
          <indexterm zone="nvidia nvidia-smi">
            <primary sortas="b-nvidia-smi">nvidia-smi</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-uninstall">
        <term><command>nvidia-uninstall</command></term>
        <listitem>
          <para>
            installs, upgrades, and uninstalls the <application>NVIDIA
	    </application> driver (running the runfile directly is
	    recommended)

          </para>
          <indexterm zone="nvidia nvidia-uninstall">
            <primary sortas="b-nvidia-uninstall">nvidia-uninstall</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nvidia-xconfig">
        <term><command>nvidia-xconfig</command></term>
        <listitem>
          <para>
            manipulates <application>X11</application> configuration files
	    to allow the <application>NVIDIA</application> driver to be used
	    when starting <application>X11</application>
          </para>
          <indexterm zone="nvidia nvidia-xconfig">
            <primary sortas="b-nvidia-xconfig">nvidia-xconfig</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libtester">
        <term><filename class="libraryfile">libtester.so</filename></term>
        <listitem>
          <para>
            contains functions to x
          </para>
          <indexterm zone="nvidia libtester">
            <primary sortas="c-libtester">libtester.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
