<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="winedeps" xreflabel="Wine Dependencies">
  <?dbhtml filename="winedeps.html"?>


  <title>Wine Dependencies</title>

  <para>
    Wine has three build formats and depending on what build you want,
    you will have to pay attention to what you install and its format.
  </para>

  <para>
    The three build types are: 32-bit, 64-bit, and WoW64. 32-bit and 64-bit
    are self-explanatory, but WoW64 needs explanation. WoW64 is a compatibility
    layer created by Microsoft when applications and computers were becoming 64-bit.
    This layer allows users to emulate 32-bit Windows applications on a 64-bit
    CPU. Knowing this, a Wine WoW64 build can be explained as a build type that
    allows the user to execute Windows 32-bit and 64-bit applications.
  </para>

  <para>
    If you are on 32-bit, follow the instructions normally for each dependency,
    and when you reach the <application>MinGW-w64</application> section of this
    chapter, follow the i686 instructions.
  </para>

  <para>
    If you are on 64-bit and don't want a WoW64 build, follow the instructions
    normally and skip the lib32 instructions. When you reach the <application>
    MinGW-w64</application> section, follow only the x86_64 instructions.
  </para>

  <para>
    If you are on 64-bit and want a 32-bit only build, follow only the lib32
    instructions. When you reach <application>MinGW-w64</application>, follow
    the i686 instructions.
  </para>

  <para>
    And finally, if you are on 64-bit and want a WoW64 build, follow all the
    instructions on the dependency pages unless instructed otherwise or are
    presented with options.
  </para>

  <sect2>
    <title>Required</title>

    <para>
	Audio (<xref linkend="alsa-plugins"/> and/or
	<xref linkend="pulseaudio"/>), <xref linkend="dbus"/>,
	Display server (X11 or Wayland w/ xwayland), <xref linkend="fontconfig"/>,
	<xref linkend="freetype2-pass2"/>, <xref linkend="gnat"/>,
	<xref linkend="gnutls"/>,
	<xref linkend="libunwind"/> (if 64-bit),
	<xref linkend="mingw-w64-gcc"/>, OpenGL (<xref linkend="libglvnd"/> and/or
	<xref linkend="mesa"/>),
	and a window manager or desktop environment (such as
	<ulink url="https://www.linuxfromscratch.org/blfs/view/svn/gnome/gnome.html">
	GNOME</ulink>,
	<ulink url="https://www.linuxfromscratch.org/blfs/view/svn/kde/kde.html">
	KDE Plasma</ulink>,
	<ulink url="https://hyprland.org/">Hyprland</ulink>, or
	<ulink url="https://awesomewm.org/">AwesomeWM</ulink>)
    </para>

  </sect2>

  <sect2>
    <title>Recommended</title>

    <para>
	GStreamer, SDL2, and <xref linkend="libvk"/>
    </para>

  </sect2>

  <sect2>
    <title>Optional</title>

    <para>
	libcapi20, CUPS, gphoto2, libsane, Kerberos, libnetapi, OpenCL,
	libpcap, libusb, and v4l2
    </para>

  </sect2>

</sect1>
