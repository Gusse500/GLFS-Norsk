<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../../general.ent">
  %general-entities;

  <!ENTITY gst10-plugins-good-download-http
           "&gstreamer-dl;/gst-plugins-good/gst-plugins-good-&gst10-plugins-good-version;.tar.xz">
  <!ENTITY gst10-plugins-good-download-ftp  " ">
]>

<sect1 id="gst10-plugins-good" xreflabel="gst-plugins-good-&gst10-plugins-good-version;">
  <?dbhtml filename="gst10-plugins-good.html"?>

  <title>gst-plugins-good-&gst10-plugins-good-version;</title>

  <indexterm zone="gst10-plugins-good">
    <primary sortas="a-gst-plugins-good">gst-plugins-good</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to GStreamer Good Plug-ins</title>

    <para>
      The <application>GStreamer Good Plug-ins</application> is a set of plug-ins
      considered by the <application>GStreamer</application> developers to have
      good quality code, correct functionality, and the preferred license (LGPL
      for the plug-in code, LGPL or LGPL-compatible for the supporting library).
      A wide range of video and audio decoders, encoders, and filters are included.
    </para>

    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&gst10-plugins-good-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&gst10-plugins-good-download-ftp;"/>
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">GStreamer Good Plug-ins Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="required">
      <xref linkend="gst10-plugins-base"/> and
      <xref linkend="mesonfiles"/> (for lib32)
    </para>

    <!-- Common formats, output and input codecs and requirements
    for GNOME apps. What's a multimedia framework useful if it
    can't be used to play anything (common)? -->

    <bridgehead renderas="sect4">Recommended</bridgehead>
    <para role="recommended">
      <ulink url="&blfs-svn;/x/cairo.html">Cairo</ulink>,
      <xref linkend="flac"/>,
      <ulink url="&blfs-svn;/x/gdk-pixbuf.html">gdk-pixbuf</ulink>,
      <xref linkend="lame"/>,
      <ulink url="&blfs-svn;/basicnet/libsoup.html">libsoup-2</ulink>,
      <ulink url="&blfs-svn;/basicnet/libsoup3.html">libsoup-3</ulink>,
      <xref linkend="libvpx"/>,
      <ulink url="&blfs-svn;/multimedia/mpg123.html">mpg123</ulink>,
      <xref linkend="nasm"/>, and
      <xref linkend="pulseaudio"/>
    </para>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional">
      <ulink url="&blfs-svn;/general/aalib.html">AAlib</ulink>,
      <ulink url="&blfs-svn;/x/gtk3.html">GTK-3</ulink> (for examples),
      <ulink url="&blfs-svn;/multimedia/libdv.html">libdv</ulink>,
      <ulink url="&blfs-svn;/x/qt6.html">Qt-6</ulink>,
      <ulink url="https://&lfs-domainname;/blfs/view/12.1/x/qt5.html">Qt-5</ulink>,
      <ulink url="&blfs-svn;/multimedia/speex.html">Speex</ulink>,
      <ulink url="&blfs-svn;/multimedia/taglib.html">taglib</ulink>,
      <ulink url="&blfs-svn;/general/valgrind.html">Valgrind</ulink>,
      <ulink url="&blfs-svn;/multimedia/v4l-utils.html">v4l-utils</ulink>,
      <xref linkend="wayland"/>,
      <ulink url="https://www.alsa-project.org/files/pub/oss-lib">alsa-oss</ulink>,
      <ulink url="https://pypi.org/project/hotdoc/">hotdoc</ulink>,
      <ulink url="https://jackaudio.org/">JACK</ulink>,
      <ulink url="https://github.com/cacalabs/libcaca">libcaca</ulink>,
      <ulink url="https://sourceforge.net/projects/libavc1394/">libavc1394</ulink>,
      <ulink url="https://sourceforge.net/projects/libraw1394/">libiec61883</ulink>,
      <ulink url="https://sourceforge.net/projects/libraw1394/">libraw1394</ulink>,
      <ulink url="https://www.icecast.org">libshout</ulink>,
      <ulink url="https://gstreamer.freedesktop.org/src/orc/">Orc</ulink>,
      <ulink url="https://www.twolame.org/">TwoLame</ulink>, and
      <ulink url="https://wavpack.com/">WavPack</ulink>
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Installation of GStreamer Good Plug-ins</title>
    <!--
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../../xincludes/gst10-objc-error.xml"/>
    -->
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../../xincludes/gst10-plugins.xml"/>

    <para>
      Install <application>GStreamer Good Plug-ins</application> by running the
      following commands:
    </para>

<screen><userinput>mkdir build &amp;&amp;
cd    build &amp;&amp;

meson setup ..            \
      --prefix=/usr       \
      --buildtype=release &amp;&amp;

ninja</userinput></screen>

    <para>
      To test the results, issue: <command>ninja test</command>.
      One test, <filename>elements_flvmux</filename>,
      is known to fail on some systems.
    </para>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>ninja install</userinput></screen>
  
  </sect2>

  <sect2 role="installation">
    <title>lib32 Installation of GStreamer Good Plug-ins</title>

    <para>
      First clean the build directory:
    </para>

    <screen><userinput>rm -rf *</userinput></screen>

    <para>
      Install lib32 <application>GStreamer Good Plug-ins</application> by running the
      following commands:
    </para>

<screen><userinput>meson setup ..                                                        \
      --cross-file lib32                                              \
      --prefix=/usr                                                   \
      --libdir=/usr/lib32                                             \
      --buildtype=release                                             \
      $([ ! -f /usr/lib32/libmp3lame.so ] &amp;&amp; echo "-D lame=disabled") \
      -D qt5=disabled                                                 \
      -D qt6=disabled &amp;&amp;

ninja</userinput></screen>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>DESTDIR=$PWD/DESTDIR ninja install    &amp;&amp;
cp -vR DESTDIR/usr/lib32/* /usr/lib32 &amp;&amp;
rm -rf DESTDIR                        &amp;&amp;
ldconfig</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    &options-meson;

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../../xincludes/meson-buildtype-release.xml"/>

    <para>
      <command>$([ ! -f /usr/lib32/libmp3lame.so ] ...</command>: This command
      searches for a library from one of the recommended dependencies, and if
      it can't find the library, the command invokes <parameter>-D lame=disabled
      </parameter> to disable LAME support for the 32-bit build as Meson can't
      detect if it is the right architecture or not.
    </para>

    <para>
      <parameter>-D qt{5,6}=disabled</parameter>: These options disable Qt-5 and
      Qt-6 support for the 32-bit build as Meson incorrectly uses Qt libraries
      that may be 64-bit only if they are found at all. If you have not followed
      BLFS, this switch is not needed.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
          None
        </seg>
        <seg>
          Several plugins under /usr/lib/gstreamer-1.0
        </seg>
        <seg>
          /usr/share/gstreamer-1.0/presets
        </seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

</sect1>
