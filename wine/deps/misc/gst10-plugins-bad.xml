<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../../general.ent">
  %general-entities;

  <!ENTITY gst10-plugins-bad-download-http
           "&gstreamer-dl;/gst-plugins-bad/gst-plugins-bad-&gst10-plugins-bad-version;.tar.xz">
  <!ENTITY gst10-plugins-bad-download-ftp  " ">
]>

<sect1 id="gst10-plugins-bad" xreflabel="gst-plugins-bad-&gst10-plugins-bad-version;">
  <?dbhtml filename="gst10-plugins-bad.html"?>

  <title>gst-plugins-bad-&gst10-plugins-bad-version;</title>

  <indexterm zone="gst10-plugins-bad">
    <primary sortas="a-gst-plugins-bad">gst-plugins-bad</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to GStreamer Bad Plug-ins</title>

    <para>
      The <application>GStreamer Bad Plug-ins</application> package contains a
      set of plug-ins that aren't up to par compared to the rest. They
      might be close to being good quality, but they're missing something - be
      it a good code review, some documentation, a set of tests, a real live
      maintainer, or some actual wide use.
    </para>

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&gst10-plugins-bad-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&gst10-plugins-bad-download-ftp;"/>
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">GStreamer Bad Plug-ins Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="required">
      <xref linkend="gst10-plugins-base"/> and
      <xref linkend="mesonfiles"/> (for lib32)
    </para>

    <!-- Common formats, output and input codecs and requirements
    for GNOME apps. What's a multimedia framework useful if it
    can't be used to play anything (common)? -->
    <bridgehead renderas="sect4">Recommended</bridgehead>
    <para role="recommended">
      <ulink url="&blfs-svn;/multimedia/libdvdread.html">libdvdread</ulink>,
      <ulink url="&blfs-svn;/multimedia/libdvdnav.html">libdvdnav</ulink>,
      <xref linkend="libva"/>, and
      <ulink url="&blfs-svn;/multimedia/soundtouch.html">SoundTouch</ulink>
    </para>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional">
      See <ulink url="&blfs-svn;/multimedia/gst10-plugins-bad.html">
      BLFS' gst-plugins-bad</ulink> for a full list of optional
      dependencies.
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Installation of GStreamer Bad Plug-ins</title>
    <!--
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../../xincludes/gst10-objc-error.xml"/>
    -->
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../../xincludes/gst10-plugins.xml"/>

    <para>
      Install <application>GStreamer Bad Plug-ins</application> by running the
      following commands:
    </para>

<screen><userinput>mkdir build &amp;&amp;
cd    build &amp;&amp;

meson setup ..            \
      --prefix=/usr       \
      --buildtype=release \
      -D gpl=enabled &amp;&amp;

ninja</userinput></screen>

    <para>
      To test the results, issue: <command>ninja test</command>. Several tests
      need a terminal emulator in a graphical session. One test,
      <emphasis>elements_dash_mpd</emphasis>, is known to fail.
      <!-- Upstream issue is https://gitlab.freedesktop.org/gstreamer/gstreamer/-/issues/3124 -->

      <!-- Upstream issue gst-plugins-bad/#1426 -->
      If <xref linkend='gst10-plugins-good'/> is not installed, two tests,
      <emphasis>elements_rtpsrc</emphasis> and
      <emphasis>elements_rtpsink</emphasis>, will fail.
    </para>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>ninja install</userinput></screen>
 
  </sect2>

  <sect2 role="installation">
    <title>Installation of GStreamer Bad Plug-ins</title>

    <para>First clean the build directory:</para>

    <screen><userinput>rm -rf *</userinput></screen>

    <para>
      Install lib32 <application>GStreamer Bad Plug-ins</application> by running the
      following commands:
    </para>

<screen><userinput>meson setup ..            \
      --cross-file lib32  \
      --prefix=/usr       \
      --libdir=/usr/lib32 \
      --buildtype=release \
      -D gpl=enabled &amp;&amp;

ninja</userinput></screen>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>DESTDIR=$PWD/DESTDIR ninja install    &amp;&amp;
cp -vR DESTDIR/usr/lib32/* /usr/lib32 &amp;&amp;
rm -rf DESTDIR                        &amp;&amp;
ldconfig</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    &options-meson;

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../../xincludes/meson-buildtype-release.xml"/>

    <para>
      <parameter>-D gpl=enabled</parameter>: Without this switch, plugins with
      dependencies on (A)GPL licensed libraries are not built.
    </para>
  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
          gst-transcoder-1.0 and
          playout
        </seg>
        <seg>
          libgstadaptivedemux-1.0.so,
          libgstanalytics-1.0.so,
          libgstbadaudio-1.0.so,
          libgstbasecamerabinsrc-1.0.so,
          libgstcuda-1.0.so,
          libgstcodecparsers-1.0.so,
          libgstcodecs-1.0.so,
          libgstdxva-1.0.so,
          libgstinsertbin-1.0.so,
          libgstisoff-1.0.so,
          libgstmpegts-1.0.so,
          libgstmse-1.0.so,
          libgstphotography-1.0.so,
          libgstplay-1.0.so,
          libgstplayer-1.0.so,
          libgstsctp-1.0.so,
          libgsttranscoder-1.0.so,
          libgsturidownloader-1.0.so,
          libgstva-1.0.so,
          libgstwayland-1.0.so,
          libgstwebrtc-1.0.so, and
          several plugins under /usr/lib/gstreamer-1.0
        </seg>
        <seg>
          /usr/include/gstreamer-1.0/gst/{audio,basecamerabinsrc,cuda},
          /usr/include/gstreamer-1.0/gst/{codecparsers,insertbin,interfaces},
          /usr/include/gstreamer-1.0/gst/{isoff,mpegts,play,player,sctp}
          /usr/include/gstreamer-1.0/gst/{transcoder,uridownloader,va}, and
          /usr/include/gstreamer-1.0/gst/{wayland,webrtc}
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="gst-transcoder-1.0">
        <term><command>gst-transcoder-1.0</command></term>
        <listitem>
          <para>
            is used to transcode a stream into a different format
          </para>
          <indexterm zone="gst10-plugins-bad gst-transcoder-1.0">
            <primary sortas="b-gst-transcoder-1.0">gst-transcoder-1.0</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="playout">
        <term><command>playout</command></term>
        <listitem>
          <para>
            is an example application used to sequentially play a list of
            audio-video files
          </para>
          <indexterm zone="gst10-plugins-bad playout">
            <primary sortas="b-playout">playout</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
